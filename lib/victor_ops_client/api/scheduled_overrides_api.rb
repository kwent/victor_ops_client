=begin
#VictorOps API

#This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  https protocol is required to use this API.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 

OpenAPI spec version: 0.0.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'uri'

module VictorOpsClient
  class ScheduledOverridesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List the scheduled overrides
    # List all the scheduled overrides on the organization  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def api_public_v1_overrides_get(x_vo_api_id, x_vo_api_key, opts = {})
      data, _status_code, _headers = api_public_v1_overrides_get_with_http_info(x_vo_api_id, x_vo_api_key, opts)
      data
    end

    # List the scheduled overrides
    # List all the scheduled overrides on the organization  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def api_public_v1_overrides_get_with_http_info(x_vo_api_id, x_vo_api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ScheduledOverridesApi.api_public_v1_overrides_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling ScheduledOverridesApi.api_public_v1_overrides_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling ScheduledOverridesApi.api_public_v1_overrides_get"
      end
      # resource path
      local_var_path = '/api-public/v1/overrides'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ScheduledOverridesApi#api_public_v1_overrides_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Creates a new scheduled override
    # Creates a new scheduled override. Start and end dates are in ISO8601 format. E.g. `2018-09-28'T'05:00:00Z`  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def api_public_v1_overrides_post(x_vo_api_id, x_vo_api_key, body, opts = {})
      data, _status_code, _headers = api_public_v1_overrides_post_with_http_info(x_vo_api_id, x_vo_api_key, body, opts)
      data
    end

    # Creates a new scheduled override
    # Creates a new scheduled override. Start and end dates are in ISO8601 format. E.g. &#x60;2018-09-28&#39;T&#39;05:00:00Z&#x60;  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def api_public_v1_overrides_post_with_http_info(x_vo_api_id, x_vo_api_key, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ScheduledOverridesApi.api_public_v1_overrides_post ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling ScheduledOverridesApi.api_public_v1_overrides_post"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling ScheduledOverridesApi.api_public_v1_overrides_post"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ScheduledOverridesApi.api_public_v1_overrides_post"
      end
      # resource path
      local_var_path = '/api-public/v1/overrides'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ScheduledOverridesApi#api_public_v1_overrides_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get the specified scheduled override
    # Get the specified scheduled override assignments  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param public_id The publicId of the scheduled override
    # @param [Hash] opts the optional parameters
    # @return [Array<Assignment>]
    def api_public_v1_overrides_public_id_assignments_get(x_vo_api_id, x_vo_api_key, public_id, opts = {})
      data, _status_code, _headers = api_public_v1_overrides_public_id_assignments_get_with_http_info(x_vo_api_id, x_vo_api_key, public_id, opts)
      data
    end

    # Get the specified scheduled override
    # Get the specified scheduled override assignments  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param public_id The publicId of the scheduled override
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<Assignment>, Fixnum, Hash)>] Array<Assignment> data, response status code and response headers
    def api_public_v1_overrides_public_id_assignments_get_with_http_info(x_vo_api_id, x_vo_api_key, public_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_get"
      end
      # verify the required parameter 'public_id' is set
      if @api_client.config.client_side_validation && public_id.nil?
        fail ArgumentError, "Missing the required parameter 'public_id' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_get"
      end
      # resource path
      local_var_path = '/api-public/v1/overrides/{publicId}/assignments'.sub('{' + 'publicId' + '}', public_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<Assignment>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ScheduledOverridesApi#api_public_v1_overrides_public_id_assignments_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete the scheduled override assignment
    # Delete the scheduled override assignment  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param public_id The publicId of the scheduled override
    # @param policy_slug The policySlug of the assignment
    # @param [Hash] opts the optional parameters
    # @return [Assignment]
    def api_public_v1_overrides_public_id_assignments_policy_slug_delete(x_vo_api_id, x_vo_api_key, public_id, policy_slug, opts = {})
      data, _status_code, _headers = api_public_v1_overrides_public_id_assignments_policy_slug_delete_with_http_info(x_vo_api_id, x_vo_api_key, public_id, policy_slug, opts)
      data
    end

    # Delete the scheduled override assignment
    # Delete the scheduled override assignment  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param public_id The publicId of the scheduled override
    # @param policy_slug The policySlug of the assignment
    # @param [Hash] opts the optional parameters
    # @return [Array<(Assignment, Fixnum, Hash)>] Assignment data, response status code and response headers
    def api_public_v1_overrides_public_id_assignments_policy_slug_delete_with_http_info(x_vo_api_id, x_vo_api_key, public_id, policy_slug, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_delete ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_delete"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_delete"
      end
      # verify the required parameter 'public_id' is set
      if @api_client.config.client_side_validation && public_id.nil?
        fail ArgumentError, "Missing the required parameter 'public_id' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_delete"
      end
      # verify the required parameter 'policy_slug' is set
      if @api_client.config.client_side_validation && policy_slug.nil?
        fail ArgumentError, "Missing the required parameter 'policy_slug' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_delete"
      end
      # resource path
      local_var_path = '/api-public/v1/overrides/{publicId}/assignments/{policySlug}'.sub('{' + 'publicId' + '}', public_id.to_s).sub('{' + 'policySlug' + '}', policy_slug.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Assignment')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ScheduledOverridesApi#api_public_v1_overrides_public_id_assignments_policy_slug_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get the specified scheduled override assignment
    # Get the specified scheduled override assignments  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param public_id The publicId of the scheduled override
    # @param policy_slug The policySlug of the assignment
    # @param [Hash] opts the optional parameters
    # @return [Assignment]
    def api_public_v1_overrides_public_id_assignments_policy_slug_get(x_vo_api_id, x_vo_api_key, public_id, policy_slug, opts = {})
      data, _status_code, _headers = api_public_v1_overrides_public_id_assignments_policy_slug_get_with_http_info(x_vo_api_id, x_vo_api_key, public_id, policy_slug, opts)
      data
    end

    # Get the specified scheduled override assignment
    # Get the specified scheduled override assignments  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param public_id The publicId of the scheduled override
    # @param policy_slug The policySlug of the assignment
    # @param [Hash] opts the optional parameters
    # @return [Array<(Assignment, Fixnum, Hash)>] Assignment data, response status code and response headers
    def api_public_v1_overrides_public_id_assignments_policy_slug_get_with_http_info(x_vo_api_id, x_vo_api_key, public_id, policy_slug, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_get"
      end
      # verify the required parameter 'public_id' is set
      if @api_client.config.client_side_validation && public_id.nil?
        fail ArgumentError, "Missing the required parameter 'public_id' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_get"
      end
      # verify the required parameter 'policy_slug' is set
      if @api_client.config.client_side_validation && policy_slug.nil?
        fail ArgumentError, "Missing the required parameter 'policy_slug' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_get"
      end
      # resource path
      local_var_path = '/api-public/v1/overrides/{publicId}/assignments/{policySlug}'.sub('{' + 'publicId' + '}', public_id.to_s).sub('{' + 'policySlug' + '}', policy_slug.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Assignment')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ScheduledOverridesApi#api_public_v1_overrides_public_id_assignments_policy_slug_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update the scheduled override assignment
    # Update the scheduled override assignment  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param public_id The publicId of the scheduled override
    # @param policy_slug The policySlug of the assignment
    # @param body The policy and username we are assigning
    # @param [Hash] opts the optional parameters
    # @return [Assignment]
    def api_public_v1_overrides_public_id_assignments_policy_slug_put(x_vo_api_id, x_vo_api_key, public_id, policy_slug, body, opts = {})
      data, _status_code, _headers = api_public_v1_overrides_public_id_assignments_policy_slug_put_with_http_info(x_vo_api_id, x_vo_api_key, public_id, policy_slug, body, opts)
      data
    end

    # Update the scheduled override assignment
    # Update the scheduled override assignment  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param public_id The publicId of the scheduled override
    # @param policy_slug The policySlug of the assignment
    # @param body The policy and username we are assigning
    # @param [Hash] opts the optional parameters
    # @return [Array<(Assignment, Fixnum, Hash)>] Assignment data, response status code and response headers
    def api_public_v1_overrides_public_id_assignments_policy_slug_put_with_http_info(x_vo_api_id, x_vo_api_key, public_id, policy_slug, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_put ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_put"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_put"
      end
      # verify the required parameter 'public_id' is set
      if @api_client.config.client_side_validation && public_id.nil?
        fail ArgumentError, "Missing the required parameter 'public_id' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_put"
      end
      # verify the required parameter 'policy_slug' is set
      if @api_client.config.client_side_validation && policy_slug.nil?
        fail ArgumentError, "Missing the required parameter 'policy_slug' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_put"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_assignments_policy_slug_put"
      end
      # resource path
      local_var_path = '/api-public/v1/overrides/{publicId}/assignments/{policySlug}'.sub('{' + 'publicId' + '}', public_id.to_s).sub('{' + 'policySlug' + '}', policy_slug.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Assignment')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ScheduledOverridesApi#api_public_v1_overrides_public_id_assignments_policy_slug_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Deletes a scheduled override
    # Deletes a scheduled override  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param public_id The publicId of the scheduled override
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def api_public_v1_overrides_public_id_delete(x_vo_api_id, x_vo_api_key, public_id, opts = {})
      api_public_v1_overrides_public_id_delete_with_http_info(x_vo_api_id, x_vo_api_key, public_id, opts)
      nil
    end

    # Deletes a scheduled override
    # Deletes a scheduled override  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param public_id The publicId of the scheduled override
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def api_public_v1_overrides_public_id_delete_with_http_info(x_vo_api_id, x_vo_api_key, public_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ScheduledOverridesApi.api_public_v1_overrides_public_id_delete ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_delete"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_delete"
      end
      # verify the required parameter 'public_id' is set
      if @api_client.config.client_side_validation && public_id.nil?
        fail ArgumentError, "Missing the required parameter 'public_id' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_delete"
      end
      # resource path
      local_var_path = '/api-public/v1/overrides/{publicId}'.sub('{' + 'publicId' + '}', public_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ScheduledOverridesApi#api_public_v1_overrides_public_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get the specified scheduled override
    # Get the specified scheduled override  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param public_id The publicId of the scheduled override
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def api_public_v1_overrides_public_id_get(x_vo_api_id, x_vo_api_key, public_id, opts = {})
      data, _status_code, _headers = api_public_v1_overrides_public_id_get_with_http_info(x_vo_api_id, x_vo_api_key, public_id, opts)
      data
    end

    # Get the specified scheduled override
    # Get the specified scheduled override  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param public_id The publicId of the scheduled override
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def api_public_v1_overrides_public_id_get_with_http_info(x_vo_api_id, x_vo_api_key, public_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ScheduledOverridesApi.api_public_v1_overrides_public_id_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_get"
      end
      # verify the required parameter 'public_id' is set
      if @api_client.config.client_side_validation && public_id.nil?
        fail ArgumentError, "Missing the required parameter 'public_id' when calling ScheduledOverridesApi.api_public_v1_overrides_public_id_get"
      end
      # resource path
      local_var_path = '/api-public/v1/overrides/{publicId}'.sub('{' + 'publicId' + '}', public_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ScheduledOverridesApi#api_public_v1_overrides_public_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
