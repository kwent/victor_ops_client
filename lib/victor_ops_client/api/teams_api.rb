=begin
#VictorOps API

#This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  https protocol is required to use this API.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 

OpenAPI spec version: 0.0.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'uri'

module VictorOpsClient
  class TeamsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List teams
    # Get a list of teams for your organization.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param [Hash] opts the optional parameters
    # @return [ListTeamResponse]
    def api_public_v1_team_get(x_vo_api_id, x_vo_api_key, opts = {})
      data, _status_code, _headers = api_public_v1_team_get_with_http_info(x_vo_api_id, x_vo_api_key, opts)
      data
    end

    # List teams
    # Get a list of teams for your organization.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListTeamResponse, Fixnum, Hash)>] ListTeamResponse data, response status code and response headers
    def api_public_v1_team_get_with_http_info(x_vo_api_id, x_vo_api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TeamsApi.api_public_v1_team_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling TeamsApi.api_public_v1_team_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling TeamsApi.api_public_v1_team_get"
      end
      # resource path
      local_var_path = '/api-public/v1/team'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ListTeamResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TeamsApi#api_public_v1_team_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add a team
    # Add a team to your organization.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param body The team information
    # @param [Hash] opts the optional parameters
    # @return [AddTeamResponse]
    def api_public_v1_team_post(x_vo_api_id, x_vo_api_key, body, opts = {})
      data, _status_code, _headers = api_public_v1_team_post_with_http_info(x_vo_api_id, x_vo_api_key, body, opts)
      data
    end

    # Add a team
    # Add a team to your organization.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param body The team information
    # @param [Hash] opts the optional parameters
    # @return [Array<(AddTeamResponse, Fixnum, Hash)>] AddTeamResponse data, response status code and response headers
    def api_public_v1_team_post_with_http_info(x_vo_api_id, x_vo_api_key, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TeamsApi.api_public_v1_team_post ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling TeamsApi.api_public_v1_team_post"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling TeamsApi.api_public_v1_team_post"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling TeamsApi.api_public_v1_team_post"
      end
      # resource path
      local_var_path = '/api-public/v1/team'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AddTeamResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TeamsApi#api_public_v1_team_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve a list of team admins for a team
    # Get the team admins for the specified team.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team
    # @param [Hash] opts the optional parameters
    # @return [TeamAdminsResponse]
    def api_public_v1_team_team_admins_get(x_vo_api_id, x_vo_api_key, team, opts = {})
      data, _status_code, _headers = api_public_v1_team_team_admins_get_with_http_info(x_vo_api_id, x_vo_api_key, team, opts)
      data
    end

    # Retrieve a list of team admins for a team
    # Get the team admins for the specified team.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team
    # @param [Hash] opts the optional parameters
    # @return [Array<(TeamAdminsResponse, Fixnum, Hash)>] TeamAdminsResponse data, response status code and response headers
    def api_public_v1_team_team_admins_get_with_http_info(x_vo_api_id, x_vo_api_key, team, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TeamsApi.api_public_v1_team_team_admins_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling TeamsApi.api_public_v1_team_team_admins_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling TeamsApi.api_public_v1_team_team_admins_get"
      end
      # verify the required parameter 'team' is set
      if @api_client.config.client_side_validation && team.nil?
        fail ArgumentError, "Missing the required parameter 'team' when calling TeamsApi.api_public_v1_team_team_admins_get"
      end
      # resource path
      local_var_path = '/api-public/v1/team/{team}/admins'.sub('{' + 'team' + '}', team.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TeamAdminsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TeamsApi#api_public_v1_team_team_admins_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Remove a team
    # Remove a team from your organization.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to be deleted
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def api_public_v1_team_team_delete(x_vo_api_id, x_vo_api_key, team, opts = {})
      api_public_v1_team_team_delete_with_http_info(x_vo_api_id, x_vo_api_key, team, opts)
      nil
    end

    # Remove a team
    # Remove a team from your organization.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to be deleted
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def api_public_v1_team_team_delete_with_http_info(x_vo_api_id, x_vo_api_key, team, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TeamsApi.api_public_v1_team_team_delete ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling TeamsApi.api_public_v1_team_team_delete"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling TeamsApi.api_public_v1_team_team_delete"
      end
      # verify the required parameter 'team' is set
      if @api_client.config.client_side_validation && team.nil?
        fail ArgumentError, "Missing the required parameter 'team' when calling TeamsApi.api_public_v1_team_team_delete"
      end
      # resource path
      local_var_path = '/api-public/v1/team/{team}'.sub('{' + 'team' + '}', team.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TeamsApi#api_public_v1_team_team_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve information for a team
    # Get the information for the specified team.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to fetch
    # @param [Hash] opts the optional parameters
    # @return [AddTeamResponse]
    def api_public_v1_team_team_get(x_vo_api_id, x_vo_api_key, team, opts = {})
      data, _status_code, _headers = api_public_v1_team_team_get_with_http_info(x_vo_api_id, x_vo_api_key, team, opts)
      data
    end

    # Retrieve information for a team
    # Get the information for the specified team.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to fetch
    # @param [Hash] opts the optional parameters
    # @return [Array<(AddTeamResponse, Fixnum, Hash)>] AddTeamResponse data, response status code and response headers
    def api_public_v1_team_team_get_with_http_info(x_vo_api_id, x_vo_api_key, team, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TeamsApi.api_public_v1_team_team_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling TeamsApi.api_public_v1_team_team_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling TeamsApi.api_public_v1_team_team_get"
      end
      # verify the required parameter 'team' is set
      if @api_client.config.client_side_validation && team.nil?
        fail ArgumentError, "Missing the required parameter 'team' when calling TeamsApi.api_public_v1_team_team_get"
      end
      # resource path
      local_var_path = '/api-public/v1/team/{team}'.sub('{' + 'team' + '}', team.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AddTeamResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TeamsApi#api_public_v1_team_team_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve a list of members for a team
    # Get the members for the specified team.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to fetch
    # @param [Hash] opts the optional parameters
    # @return [ListTeamMembersResponse]
    def api_public_v1_team_team_members_get(x_vo_api_id, x_vo_api_key, team, opts = {})
      data, _status_code, _headers = api_public_v1_team_team_members_get_with_http_info(x_vo_api_id, x_vo_api_key, team, opts)
      data
    end

    # Retrieve a list of members for a team
    # Get the members for the specified team.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to fetch
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListTeamMembersResponse, Fixnum, Hash)>] ListTeamMembersResponse data, response status code and response headers
    def api_public_v1_team_team_members_get_with_http_info(x_vo_api_id, x_vo_api_key, team, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TeamsApi.api_public_v1_team_team_members_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling TeamsApi.api_public_v1_team_team_members_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling TeamsApi.api_public_v1_team_team_members_get"
      end
      # verify the required parameter 'team' is set
      if @api_client.config.client_side_validation && team.nil?
        fail ArgumentError, "Missing the required parameter 'team' when calling TeamsApi.api_public_v1_team_team_members_get"
      end
      # resource path
      local_var_path = '/api-public/v1/team/{team}/members'.sub('{' + 'team' + '}', team.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ListTeamMembersResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TeamsApi#api_public_v1_team_team_members_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add a team member
    # Add a team member to your team.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to fetch
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ListTeamMembersResponse]
    def api_public_v1_team_team_members_post(x_vo_api_id, x_vo_api_key, team, body, opts = {})
      data, _status_code, _headers = api_public_v1_team_team_members_post_with_http_info(x_vo_api_id, x_vo_api_key, team, body, opts)
      data
    end

    # Add a team member
    # Add a team member to your team.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to fetch
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListTeamMembersResponse, Fixnum, Hash)>] ListTeamMembersResponse data, response status code and response headers
    def api_public_v1_team_team_members_post_with_http_info(x_vo_api_id, x_vo_api_key, team, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TeamsApi.api_public_v1_team_team_members_post ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling TeamsApi.api_public_v1_team_team_members_post"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling TeamsApi.api_public_v1_team_team_members_post"
      end
      # verify the required parameter 'team' is set
      if @api_client.config.client_side_validation && team.nil?
        fail ArgumentError, "Missing the required parameter 'team' when calling TeamsApi.api_public_v1_team_team_members_post"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling TeamsApi.api_public_v1_team_team_members_post"
      end
      # resource path
      local_var_path = '/api-public/v1/team/{team}/members'.sub('{' + 'team' + '}', team.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ListTeamMembersResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TeamsApi#api_public_v1_team_team_members_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Remove a team member
    # Remove a team member from your team.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to be removed from
    # @param user The team member username to be removed
    # @param body The user information
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def api_public_v1_team_team_members_user_delete(x_vo_api_id, x_vo_api_key, team, user, body, opts = {})
      api_public_v1_team_team_members_user_delete_with_http_info(x_vo_api_id, x_vo_api_key, team, user, body, opts)
      nil
    end

    # Remove a team member
    # Remove a team member from your team.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to be removed from
    # @param user The team member username to be removed
    # @param body The user information
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def api_public_v1_team_team_members_user_delete_with_http_info(x_vo_api_id, x_vo_api_key, team, user, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TeamsApi.api_public_v1_team_team_members_user_delete ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling TeamsApi.api_public_v1_team_team_members_user_delete"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling TeamsApi.api_public_v1_team_team_members_user_delete"
      end
      # verify the required parameter 'team' is set
      if @api_client.config.client_side_validation && team.nil?
        fail ArgumentError, "Missing the required parameter 'team' when calling TeamsApi.api_public_v1_team_team_members_user_delete"
      end
      # verify the required parameter 'user' is set
      if @api_client.config.client_side_validation && user.nil?
        fail ArgumentError, "Missing the required parameter 'user' when calling TeamsApi.api_public_v1_team_team_members_user_delete"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling TeamsApi.api_public_v1_team_team_members_user_delete"
      end
      # resource path
      local_var_path = '/api-public/v1/team/{team}/members/{user}'.sub('{' + 'team' + '}', team.to_s).sub('{' + 'user' + '}', user.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TeamsApi#api_public_v1_team_team_members_user_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve a list of escalation policies for a team
    # Please see the Escalation Policies section for retrieving information on escalation policies  Get the escalation policies for the specified team.  This API may be called a maximum of 2 times per second.
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to fetch
    # @param [Hash] opts the optional parameters
    # @return [EscalationPolicyInfoList]
    def api_public_v1_team_team_policies_get(x_vo_api_id, x_vo_api_key, team, opts = {})
      data, _status_code, _headers = api_public_v1_team_team_policies_get_with_http_info(x_vo_api_id, x_vo_api_key, team, opts)
      data
    end

    # Retrieve a list of escalation policies for a team
    # Please see the Escalation Policies section for retrieving information on escalation policies  Get the escalation policies for the specified team.  This API may be called a maximum of 2 times per second.
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to fetch
    # @param [Hash] opts the optional parameters
    # @return [Array<(EscalationPolicyInfoList, Fixnum, Hash)>] EscalationPolicyInfoList data, response status code and response headers
    def api_public_v1_team_team_policies_get_with_http_info(x_vo_api_id, x_vo_api_key, team, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TeamsApi.api_public_v1_team_team_policies_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling TeamsApi.api_public_v1_team_team_policies_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling TeamsApi.api_public_v1_team_team_policies_get"
      end
      # verify the required parameter 'team' is set
      if @api_client.config.client_side_validation && team.nil?
        fail ArgumentError, "Missing the required parameter 'team' when calling TeamsApi.api_public_v1_team_team_policies_get"
      end
      # resource path
      local_var_path = '/api-public/v1/team/{team}/policies'.sub('{' + 'team' + '}', team.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EscalationPolicyInfoList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TeamsApi#api_public_v1_team_team_policies_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update a team
    # Update the designated team  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to be updated
    # @param body The team information
    # @param [Hash] opts the optional parameters
    # @return [AddTeamResponse]
    def api_public_v1_team_team_put(x_vo_api_id, x_vo_api_key, team, body, opts = {})
      data, _status_code, _headers = api_public_v1_team_team_put_with_http_info(x_vo_api_id, x_vo_api_key, team, body, opts)
      data
    end

    # Update a team
    # Update the designated team  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team to be updated
    # @param body The team information
    # @param [Hash] opts the optional parameters
    # @return [Array<(AddTeamResponse, Fixnum, Hash)>] AddTeamResponse data, response status code and response headers
    def api_public_v1_team_team_put_with_http_info(x_vo_api_id, x_vo_api_key, team, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TeamsApi.api_public_v1_team_team_put ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling TeamsApi.api_public_v1_team_team_put"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling TeamsApi.api_public_v1_team_team_put"
      end
      # verify the required parameter 'team' is set
      if @api_client.config.client_side_validation && team.nil?
        fail ArgumentError, "Missing the required parameter 'team' when calling TeamsApi.api_public_v1_team_team_put"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling TeamsApi.api_public_v1_team_team_put"
      end
      # resource path
      local_var_path = '/api-public/v1/team/{team}'.sub('{' + 'team' + '}', team.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AddTeamResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TeamsApi#api_public_v1_team_team_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
