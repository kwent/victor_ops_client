=begin
#VictorOps API

#This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  https protocol is required to use this API.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 

OpenAPI spec version: 0.0.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'uri'

module VictorOpsClient
  class OnCallApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get an organization's on-call users
    # Get all on-call users/teams for your organization.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def api_public_v1_oncall_current_get(x_vo_api_id, x_vo_api_key, opts = {})
      data, _status_code, _headers = api_public_v1_oncall_current_get_with_http_info(x_vo_api_id, x_vo_api_key, opts)
      data
    end

    # Get an organization&#39;s on-call users
    # Get all on-call users/teams for your organization.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def api_public_v1_oncall_current_get_with_http_info(x_vo_api_id, x_vo_api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: OnCallApi.api_public_v1_oncall_current_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling OnCallApi.api_public_v1_oncall_current_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling OnCallApi.api_public_v1_oncall_current_get"
      end
      # resource path
      local_var_path = '/api-public/v1/oncall/current'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OnCallApi#api_public_v1_oncall_current_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create an on-call override (take on-call)
    # Replaces a currently on-call user in the escalation policy with another.  In many cases, the policy slug will match the slug of the team that contains it.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param body The take on-call payload
    # @param policy The VictorOps policy &#39;slug&#39;
    # @param [Hash] opts the optional parameters
    # @return [TakeResult]
    def api_public_v1_policies_policy_oncall_user_patch(x_vo_api_id, x_vo_api_key, body, policy, opts = {})
      data, _status_code, _headers = api_public_v1_policies_policy_oncall_user_patch_with_http_info(x_vo_api_id, x_vo_api_key, body, policy, opts)
      data
    end

    # Create an on-call override (take on-call)
    # Replaces a currently on-call user in the escalation policy with another.  In many cases, the policy slug will match the slug of the team that contains it.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param body The take on-call payload
    # @param policy The VictorOps policy &#39;slug&#39;
    # @param [Hash] opts the optional parameters
    # @return [Array<(TakeResult, Fixnum, Hash)>] TakeResult data, response status code and response headers
    def api_public_v1_policies_policy_oncall_user_patch_with_http_info(x_vo_api_id, x_vo_api_key, body, policy, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: OnCallApi.api_public_v1_policies_policy_oncall_user_patch ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling OnCallApi.api_public_v1_policies_policy_oncall_user_patch"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling OnCallApi.api_public_v1_policies_policy_oncall_user_patch"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling OnCallApi.api_public_v1_policies_policy_oncall_user_patch"
      end
      # verify the required parameter 'policy' is set
      if @api_client.config.client_side_validation && policy.nil?
        fail ArgumentError, "Missing the required parameter 'policy' when calling OnCallApi.api_public_v1_policies_policy_oncall_user_patch"
      end
      # resource path
      local_var_path = '/api-public/v1/policies/{policy}/oncall/user'.sub('{' + 'policy' + '}', policy.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TakeResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OnCallApi#api_public_v1_policies_policy_oncall_user_patch\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get a team's on-call schedule
    # __NOTE: This call is deprecated. Please use `GET /api-public/v2/team/{team}/oncall/schedule`.__  Get the on-call schedule for a team, including on-call overrides.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team &#39;slug&#39;
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :days_forward Days to include in returned schedule (123 max) (default to 14)
    # @option opts [Float] :days_skip Days to skip before computing schedule to return (90 max) (default to 0)
    # @option opts [Float] :step Step of escalation policy (3 max) (default to 0)
    # @return [OnCallAndOverrides]
    def api_public_v1_team_team_oncall_schedule_get(x_vo_api_id, x_vo_api_key, team, opts = {})
      data, _status_code, _headers = api_public_v1_team_team_oncall_schedule_get_with_http_info(x_vo_api_id, x_vo_api_key, team, opts)
      data
    end

    # Get a team&#39;s on-call schedule
    # __NOTE: This call is deprecated. Please use &#x60;GET /api-public/v2/team/{team}/oncall/schedule&#x60;.__  Get the on-call schedule for a team, including on-call overrides.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team &#39;slug&#39;
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :days_forward Days to include in returned schedule (123 max)
    # @option opts [Float] :days_skip Days to skip before computing schedule to return (90 max)
    # @option opts [Float] :step Step of escalation policy (3 max)
    # @return [Array<(OnCallAndOverrides, Fixnum, Hash)>] OnCallAndOverrides data, response status code and response headers
    def api_public_v1_team_team_oncall_schedule_get_with_http_info(x_vo_api_id, x_vo_api_key, team, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: OnCallApi.api_public_v1_team_team_oncall_schedule_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling OnCallApi.api_public_v1_team_team_oncall_schedule_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling OnCallApi.api_public_v1_team_team_oncall_schedule_get"
      end
      # verify the required parameter 'team' is set
      if @api_client.config.client_side_validation && team.nil?
        fail ArgumentError, "Missing the required parameter 'team' when calling OnCallApi.api_public_v1_team_team_oncall_schedule_get"
      end
      if @api_client.config.client_side_validation && !opts[:'days_forward'].nil? && opts[:'days_forward'] > 123
        fail ArgumentError, 'invalid value for "opts[:"days_forward"]" when calling OnCallApi.api_public_v1_team_team_oncall_schedule_get, must be smaller than or equal to 123.'
      end

      if @api_client.config.client_side_validation && !opts[:'days_forward'].nil? && opts[:'days_forward'] < 0
        fail ArgumentError, 'invalid value for "opts[:"days_forward"]" when calling OnCallApi.api_public_v1_team_team_oncall_schedule_get, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'days_skip'].nil? && opts[:'days_skip'] > 90
        fail ArgumentError, 'invalid value for "opts[:"days_skip"]" when calling OnCallApi.api_public_v1_team_team_oncall_schedule_get, must be smaller than or equal to 90.'
      end

      if @api_client.config.client_side_validation && !opts[:'days_skip'].nil? && opts[:'days_skip'] < 0
        fail ArgumentError, 'invalid value for "opts[:"days_skip"]" when calling OnCallApi.api_public_v1_team_team_oncall_schedule_get, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'step'].nil? && opts[:'step'] > 3
        fail ArgumentError, 'invalid value for "opts[:"step"]" when calling OnCallApi.api_public_v1_team_team_oncall_schedule_get, must be smaller than or equal to 3.'
      end

      if @api_client.config.client_side_validation && !opts[:'step'].nil? && opts[:'step'] < 0
        fail ArgumentError, 'invalid value for "opts[:"step"]" when calling OnCallApi.api_public_v1_team_team_oncall_schedule_get, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/api-public/v1/team/{team}/oncall/schedule'.sub('{' + 'team' + '}', team.to_s)

      # query parameters
      query_params = {}
      query_params[:'daysForward'] = opts[:'days_forward'] if !opts[:'days_forward'].nil?
      query_params[:'daysSkip'] = opts[:'days_skip'] if !opts[:'days_skip'].nil?
      query_params[:'step'] = opts[:'step'] if !opts[:'step'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OnCallAndOverrides')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OnCallApi#api_public_v1_team_team_oncall_schedule_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create an on-call override (take on-call)
    # __NOTE: This API call is deprecated. Please use `PATCH /api-public/v2/policies/{policy}/oncall/user`__  Replaces a currently on-call user on the team with another.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param body The take on-call payload
    # @param team The VictorOps team &#39;slug&#39;
    # @param [Hash] opts the optional parameters
    # @return [TakeResult]
    def api_public_v1_team_team_oncall_user_patch(x_vo_api_id, x_vo_api_key, body, team, opts = {})
      data, _status_code, _headers = api_public_v1_team_team_oncall_user_patch_with_http_info(x_vo_api_id, x_vo_api_key, body, team, opts)
      data
    end

    # Create an on-call override (take on-call)
    # __NOTE: This API call is deprecated. Please use &#x60;PATCH /api-public/v2/policies/{policy}/oncall/user&#x60;__  Replaces a currently on-call user on the team with another.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param body The take on-call payload
    # @param team The VictorOps team &#39;slug&#39;
    # @param [Hash] opts the optional parameters
    # @return [Array<(TakeResult, Fixnum, Hash)>] TakeResult data, response status code and response headers
    def api_public_v1_team_team_oncall_user_patch_with_http_info(x_vo_api_id, x_vo_api_key, body, team, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: OnCallApi.api_public_v1_team_team_oncall_user_patch ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling OnCallApi.api_public_v1_team_team_oncall_user_patch"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling OnCallApi.api_public_v1_team_team_oncall_user_patch"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling OnCallApi.api_public_v1_team_team_oncall_user_patch"
      end
      # verify the required parameter 'team' is set
      if @api_client.config.client_side_validation && team.nil?
        fail ArgumentError, "Missing the required parameter 'team' when calling OnCallApi.api_public_v1_team_team_oncall_user_patch"
      end
      # resource path
      local_var_path = '/api-public/v1/team/{team}/oncall/user'.sub('{' + 'team' + '}', team.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TakeResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OnCallApi#api_public_v1_team_team_oncall_user_patch\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get a user's on-call schedule
    # __NOTE: This call is deprecated. Please use `GET /api-public/v2/user/{user}/oncall/schedule`.__  Get the on-call schedule for a user for all teams, including on-call overrides.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param user The VictorOps user ID
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :days_forward Days to include in returned schedule (123 max) (default to 14)
    # @option opts [Float] :days_skip Days to skip before computing schedule to return (90 max) (default to 0)
    # @option opts [Float] :step Step of escalation policy (3 max) (default to 0)
    # @return [Array<OnCallAndOverrides>]
    def api_public_v1_user_user_oncall_schedule_get(x_vo_api_id, x_vo_api_key, user, opts = {})
      data, _status_code, _headers = api_public_v1_user_user_oncall_schedule_get_with_http_info(x_vo_api_id, x_vo_api_key, user, opts)
      data
    end

    # Get a user&#39;s on-call schedule
    # __NOTE: This call is deprecated. Please use &#x60;GET /api-public/v2/user/{user}/oncall/schedule&#x60;.__  Get the on-call schedule for a user for all teams, including on-call overrides.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param user The VictorOps user ID
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :days_forward Days to include in returned schedule (123 max)
    # @option opts [Float] :days_skip Days to skip before computing schedule to return (90 max)
    # @option opts [Float] :step Step of escalation policy (3 max)
    # @return [Array<(Array<OnCallAndOverrides>, Fixnum, Hash)>] Array<OnCallAndOverrides> data, response status code and response headers
    def api_public_v1_user_user_oncall_schedule_get_with_http_info(x_vo_api_id, x_vo_api_key, user, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: OnCallApi.api_public_v1_user_user_oncall_schedule_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling OnCallApi.api_public_v1_user_user_oncall_schedule_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling OnCallApi.api_public_v1_user_user_oncall_schedule_get"
      end
      # verify the required parameter 'user' is set
      if @api_client.config.client_side_validation && user.nil?
        fail ArgumentError, "Missing the required parameter 'user' when calling OnCallApi.api_public_v1_user_user_oncall_schedule_get"
      end
      if @api_client.config.client_side_validation && !opts[:'days_forward'].nil? && opts[:'days_forward'] > 123
        fail ArgumentError, 'invalid value for "opts[:"days_forward"]" when calling OnCallApi.api_public_v1_user_user_oncall_schedule_get, must be smaller than or equal to 123.'
      end

      if @api_client.config.client_side_validation && !opts[:'days_forward'].nil? && opts[:'days_forward'] < 0
        fail ArgumentError, 'invalid value for "opts[:"days_forward"]" when calling OnCallApi.api_public_v1_user_user_oncall_schedule_get, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'days_skip'].nil? && opts[:'days_skip'] > 90
        fail ArgumentError, 'invalid value for "opts[:"days_skip"]" when calling OnCallApi.api_public_v1_user_user_oncall_schedule_get, must be smaller than or equal to 90.'
      end

      if @api_client.config.client_side_validation && !opts[:'days_skip'].nil? && opts[:'days_skip'] < 0
        fail ArgumentError, 'invalid value for "opts[:"days_skip"]" when calling OnCallApi.api_public_v1_user_user_oncall_schedule_get, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'step'].nil? && opts[:'step'] > 3
        fail ArgumentError, 'invalid value for "opts[:"step"]" when calling OnCallApi.api_public_v1_user_user_oncall_schedule_get, must be smaller than or equal to 3.'
      end

      if @api_client.config.client_side_validation && !opts[:'step'].nil? && opts[:'step'] < 0
        fail ArgumentError, 'invalid value for "opts[:"step"]" when calling OnCallApi.api_public_v1_user_user_oncall_schedule_get, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/api-public/v1/user/{user}/oncall/schedule'.sub('{' + 'user' + '}', user.to_s)

      # query parameters
      query_params = {}
      query_params[:'daysForward'] = opts[:'days_forward'] if !opts[:'days_forward'].nil?
      query_params[:'daysSkip'] = opts[:'days_skip'] if !opts[:'days_skip'].nil?
      query_params[:'step'] = opts[:'step'] if !opts[:'step'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<OnCallAndOverrides>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OnCallApi#api_public_v1_user_user_oncall_schedule_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get a team's on-call schedule
    # Get the on-call schedule for a team, including on-call overrides.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team &#39;slug&#39;
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :days_forward Days to include in returned schedule (123 max) (default to 14)
    # @option opts [Float] :days_skip Days to skip before computing schedule to return (90 max) (default to 0)
    # @option opts [Float] :step Step of escalation policy (3 max) (default to 0)
    # @return [TeamSchedule]
    def api_public_v2_team_team_oncall_schedule_get(x_vo_api_id, x_vo_api_key, team, opts = {})
      data, _status_code, _headers = api_public_v2_team_team_oncall_schedule_get_with_http_info(x_vo_api_id, x_vo_api_key, team, opts)
      data
    end

    # Get a team&#39;s on-call schedule
    # Get the on-call schedule for a team, including on-call overrides.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param team The VictorOps team &#39;slug&#39;
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :days_forward Days to include in returned schedule (123 max)
    # @option opts [Float] :days_skip Days to skip before computing schedule to return (90 max)
    # @option opts [Float] :step Step of escalation policy (3 max)
    # @return [Array<(TeamSchedule, Fixnum, Hash)>] TeamSchedule data, response status code and response headers
    def api_public_v2_team_team_oncall_schedule_get_with_http_info(x_vo_api_id, x_vo_api_key, team, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: OnCallApi.api_public_v2_team_team_oncall_schedule_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling OnCallApi.api_public_v2_team_team_oncall_schedule_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling OnCallApi.api_public_v2_team_team_oncall_schedule_get"
      end
      # verify the required parameter 'team' is set
      if @api_client.config.client_side_validation && team.nil?
        fail ArgumentError, "Missing the required parameter 'team' when calling OnCallApi.api_public_v2_team_team_oncall_schedule_get"
      end
      if @api_client.config.client_side_validation && !opts[:'days_forward'].nil? && opts[:'days_forward'] > 123
        fail ArgumentError, 'invalid value for "opts[:"days_forward"]" when calling OnCallApi.api_public_v2_team_team_oncall_schedule_get, must be smaller than or equal to 123.'
      end

      if @api_client.config.client_side_validation && !opts[:'days_forward'].nil? && opts[:'days_forward'] < 0
        fail ArgumentError, 'invalid value for "opts[:"days_forward"]" when calling OnCallApi.api_public_v2_team_team_oncall_schedule_get, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'days_skip'].nil? && opts[:'days_skip'] > 90
        fail ArgumentError, 'invalid value for "opts[:"days_skip"]" when calling OnCallApi.api_public_v2_team_team_oncall_schedule_get, must be smaller than or equal to 90.'
      end

      if @api_client.config.client_side_validation && !opts[:'days_skip'].nil? && opts[:'days_skip'] < 0
        fail ArgumentError, 'invalid value for "opts[:"days_skip"]" when calling OnCallApi.api_public_v2_team_team_oncall_schedule_get, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'step'].nil? && opts[:'step'] > 3
        fail ArgumentError, 'invalid value for "opts[:"step"]" when calling OnCallApi.api_public_v2_team_team_oncall_schedule_get, must be smaller than or equal to 3.'
      end

      if @api_client.config.client_side_validation && !opts[:'step'].nil? && opts[:'step'] < 0
        fail ArgumentError, 'invalid value for "opts[:"step"]" when calling OnCallApi.api_public_v2_team_team_oncall_schedule_get, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/api-public/v2/team/{team}/oncall/schedule'.sub('{' + 'team' + '}', team.to_s)

      # query parameters
      query_params = {}
      query_params[:'daysForward'] = opts[:'days_forward'] if !opts[:'days_forward'].nil?
      query_params[:'daysSkip'] = opts[:'days_skip'] if !opts[:'days_skip'].nil?
      query_params[:'step'] = opts[:'step'] if !opts[:'step'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TeamSchedule')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OnCallApi#api_public_v2_team_team_oncall_schedule_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get a user's on-call schedule
    # Get the on-call schedule for a user for all teams the user is on, including on-call overrides.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param user The VictorOps user ID
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :days_forward Days to include in returned schedule (123 max) (default to 14)
    # @option opts [Float] :days_skip Days to skip before computing schedule to return (90 max) (default to 0)
    # @option opts [Float] :step Step of escalation policy (3 max) (default to 0)
    # @return [UserSchedule]
    def api_public_v2_user_user_oncall_schedule_get(x_vo_api_id, x_vo_api_key, user, opts = {})
      data, _status_code, _headers = api_public_v2_user_user_oncall_schedule_get_with_http_info(x_vo_api_id, x_vo_api_key, user, opts)
      data
    end

    # Get a user&#39;s on-call schedule
    # Get the on-call schedule for a user for all teams the user is on, including on-call overrides.  This API may be called a maximum of 2 times per second. 
    # @param x_vo_api_id Your API ID
    # @param x_vo_api_key Your API Key
    # @param user The VictorOps user ID
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :days_forward Days to include in returned schedule (123 max)
    # @option opts [Float] :days_skip Days to skip before computing schedule to return (90 max)
    # @option opts [Float] :step Step of escalation policy (3 max)
    # @return [Array<(UserSchedule, Fixnum, Hash)>] UserSchedule data, response status code and response headers
    def api_public_v2_user_user_oncall_schedule_get_with_http_info(x_vo_api_id, x_vo_api_key, user, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: OnCallApi.api_public_v2_user_user_oncall_schedule_get ...'
      end
      # verify the required parameter 'x_vo_api_id' is set
      if @api_client.config.client_side_validation && x_vo_api_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_id' when calling OnCallApi.api_public_v2_user_user_oncall_schedule_get"
      end
      # verify the required parameter 'x_vo_api_key' is set
      if @api_client.config.client_side_validation && x_vo_api_key.nil?
        fail ArgumentError, "Missing the required parameter 'x_vo_api_key' when calling OnCallApi.api_public_v2_user_user_oncall_schedule_get"
      end
      # verify the required parameter 'user' is set
      if @api_client.config.client_side_validation && user.nil?
        fail ArgumentError, "Missing the required parameter 'user' when calling OnCallApi.api_public_v2_user_user_oncall_schedule_get"
      end
      if @api_client.config.client_side_validation && !opts[:'days_forward'].nil? && opts[:'days_forward'] > 123
        fail ArgumentError, 'invalid value for "opts[:"days_forward"]" when calling OnCallApi.api_public_v2_user_user_oncall_schedule_get, must be smaller than or equal to 123.'
      end

      if @api_client.config.client_side_validation && !opts[:'days_forward'].nil? && opts[:'days_forward'] < 0
        fail ArgumentError, 'invalid value for "opts[:"days_forward"]" when calling OnCallApi.api_public_v2_user_user_oncall_schedule_get, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'days_skip'].nil? && opts[:'days_skip'] > 90
        fail ArgumentError, 'invalid value for "opts[:"days_skip"]" when calling OnCallApi.api_public_v2_user_user_oncall_schedule_get, must be smaller than or equal to 90.'
      end

      if @api_client.config.client_side_validation && !opts[:'days_skip'].nil? && opts[:'days_skip'] < 0
        fail ArgumentError, 'invalid value for "opts[:"days_skip"]" when calling OnCallApi.api_public_v2_user_user_oncall_schedule_get, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'step'].nil? && opts[:'step'] > 3
        fail ArgumentError, 'invalid value for "opts[:"step"]" when calling OnCallApi.api_public_v2_user_user_oncall_schedule_get, must be smaller than or equal to 3.'
      end

      if @api_client.config.client_side_validation && !opts[:'step'].nil? && opts[:'step'] < 0
        fail ArgumentError, 'invalid value for "opts[:"step"]" when calling OnCallApi.api_public_v2_user_user_oncall_schedule_get, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/api-public/v2/user/{user}/oncall/schedule'.sub('{' + 'user' + '}', user.to_s)

      # query parameters
      query_params = {}
      query_params[:'daysForward'] = opts[:'days_forward'] if !opts[:'days_forward'].nil?
      query_params[:'daysSkip'] = opts[:'days_skip'] if !opts[:'days_skip'].nil?
      query_params[:'step'] = opts[:'step'] if !opts[:'step'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-VO-Api-Id'] = x_vo_api_id
      header_params[:'X-VO-Api-Key'] = x_vo_api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UserSchedule')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OnCallApi#api_public_v2_user_user_oncall_schedule_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
