=begin
#VictorOps API

#This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  https protocol is required to use this API.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 

OpenAPI spec version: 0.0.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for VictorOpsClient::OnCallApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'OnCallApi' do
  before do
    # run before each test
    @instance = VictorOpsClient::OnCallApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OnCallApi' do
    it 'should create an instance of OnCallApi' do
      expect(@instance).to be_instance_of(VictorOpsClient::OnCallApi)
    end
  end

  # unit tests for api_public_v1_oncall_current_get
  # Get an organization&#39;s on-call users
  # Get all on-call users/teams for your organization.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'api_public_v1_oncall_current_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_policies_policy_oncall_user_patch
  # Create an on-call override (take on-call)
  # Replaces a currently on-call user in the escalation policy with another.  In many cases, the policy slug will match the slug of the team that contains it.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param body The take on-call payload
  # @param policy The VictorOps policy &#39;slug&#39;
  # @param [Hash] opts the optional parameters
  # @return [TakeResult]
  describe 'api_public_v1_policies_policy_oncall_user_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_team_team_oncall_schedule_get
  # Get a team&#39;s on-call schedule
  # __NOTE: This call is deprecated. Please use &#x60;GET /api-public/v2/team/{team}/oncall/schedule&#x60;.__  Get the on-call schedule for a team, including on-call overrides.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param team The VictorOps team &#39;slug&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :days_forward Days to include in returned schedule (123 max)
  # @option opts [Float] :days_skip Days to skip before computing schedule to return (90 max)
  # @option opts [Float] :step Step of escalation policy (3 max)
  # @return [OnCallAndOverrides]
  describe 'api_public_v1_team_team_oncall_schedule_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_team_team_oncall_user_patch
  # Create an on-call override (take on-call)
  # __NOTE: This API call is deprecated. Please use &#x60;PATCH /api-public/v2/policies/{policy}/oncall/user&#x60;__  Replaces a currently on-call user on the team with another.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param body The take on-call payload
  # @param team The VictorOps team &#39;slug&#39;
  # @param [Hash] opts the optional parameters
  # @return [TakeResult]
  describe 'api_public_v1_team_team_oncall_user_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_user_user_oncall_schedule_get
  # Get a user&#39;s on-call schedule
  # __NOTE: This call is deprecated. Please use &#x60;GET /api-public/v2/user/{user}/oncall/schedule&#x60;.__  Get the on-call schedule for a user for all teams, including on-call overrides.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param user The VictorOps user ID
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :days_forward Days to include in returned schedule (123 max)
  # @option opts [Float] :days_skip Days to skip before computing schedule to return (90 max)
  # @option opts [Float] :step Step of escalation policy (3 max)
  # @return [Array<OnCallAndOverrides>]
  describe 'api_public_v1_user_user_oncall_schedule_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v2_team_team_oncall_schedule_get
  # Get a team&#39;s on-call schedule
  # Get the on-call schedule for a team, including on-call overrides.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param team The VictorOps team &#39;slug&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :days_forward Days to include in returned schedule (123 max)
  # @option opts [Float] :days_skip Days to skip before computing schedule to return (90 max)
  # @option opts [Float] :step Step of escalation policy (3 max)
  # @return [TeamSchedule]
  describe 'api_public_v2_team_team_oncall_schedule_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v2_user_user_oncall_schedule_get
  # Get a user&#39;s on-call schedule
  # Get the on-call schedule for a user for all teams the user is on, including on-call overrides.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param user The VictorOps user ID
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :days_forward Days to include in returned schedule (123 max)
  # @option opts [Float] :days_skip Days to skip before computing schedule to return (90 max)
  # @option opts [Float] :step Step of escalation policy (3 max)
  # @return [UserSchedule]
  describe 'api_public_v2_user_user_oncall_schedule_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
