=begin
#VictorOps API

#This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  https protocol is required to use this API.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 

OpenAPI spec version: 0.0.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for VictorOpsClient::TeamsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TeamsApi' do
  before do
    # run before each test
    @instance = VictorOpsClient::TeamsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TeamsApi' do
    it 'should create an instance of TeamsApi' do
      expect(@instance).to be_instance_of(VictorOpsClient::TeamsApi)
    end
  end

  # unit tests for api_public_v1_team_get
  # List teams
  # Get a list of teams for your organization.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param [Hash] opts the optional parameters
  # @return [ListTeamResponse]
  describe 'api_public_v1_team_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_team_post
  # Add a team
  # Add a team to your organization.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param body The team information
  # @param [Hash] opts the optional parameters
  # @return [AddTeamResponse]
  describe 'api_public_v1_team_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_team_team_admins_get
  # Retrieve a list of team admins for a team
  # Get the team admins for the specified team.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param team The VictorOps team
  # @param [Hash] opts the optional parameters
  # @return [TeamAdminsResponse]
  describe 'api_public_v1_team_team_admins_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_team_team_delete
  # Remove a team
  # Remove a team from your organization.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param team The VictorOps team to be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_public_v1_team_team_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_team_team_get
  # Retrieve information for a team
  # Get the information for the specified team.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param team The VictorOps team to fetch
  # @param [Hash] opts the optional parameters
  # @return [AddTeamResponse]
  describe 'api_public_v1_team_team_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_team_team_members_get
  # Retrieve a list of members for a team
  # Get the members for the specified team.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param team The VictorOps team to fetch
  # @param [Hash] opts the optional parameters
  # @return [ListTeamMembersResponse]
  describe 'api_public_v1_team_team_members_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_team_team_members_post
  # Add a team member
  # Add a team member to your team.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param team The VictorOps team to fetch
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ListTeamMembersResponse]
  describe 'api_public_v1_team_team_members_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_team_team_members_user_delete
  # Remove a team member
  # Remove a team member from your team.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param team The VictorOps team to be removed from
  # @param user The team member username to be removed
  # @param body The user information
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_public_v1_team_team_members_user_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_team_team_policies_get
  # Retrieve a list of escalation policies for a team
  # Please see the Escalation Policies section for retrieving information on escalation policies  Get the escalation policies for the specified team.  This API may be called a maximum of 2 times per second.
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param team The VictorOps team to fetch
  # @param [Hash] opts the optional parameters
  # @return [EscalationPolicyInfoList]
  describe 'api_public_v1_team_team_policies_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_team_team_put
  # Update a team
  # Update the designated team  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param team The VictorOps team to be updated
  # @param body The team information
  # @param [Hash] opts the optional parameters
  # @return [AddTeamResponse]
  describe 'api_public_v1_team_team_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
