=begin
#VictorOps API

#This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  https protocol is required to use this API.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 

OpenAPI spec version: 0.0.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for VictorOpsClient::UsersApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @instance = VictorOpsClient::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instance of UsersApi' do
      expect(@instance).to be_instance_of(VictorOpsClient::UsersApi)
    end
  end

  # unit tests for api_public_v1_user_batch_post
  # Add multiple users
  # Add users to your organization  This API may be called a maximum of 1 time per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param [Hash] opts the optional parameters
  # @option opts [Array<ParametersaddUserPayload>] :users 
  # @return [Array<BatchAddUserEntry>]
  describe 'api_public_v1_user_batch_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_user_get
  # List users
  # __NOTE: This call is deprecated. Please use &#x60;GET /api-public/v2/user&#x60; instead.__  Get a list of users for your organization  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param [Hash] opts the optional parameters
  # @return [ListUserResponse]
  describe 'api_public_v1_user_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_user_post
  # Add a user
  # __NOTE: Use of the admin parameter is deprecated.  All calls to add a user will set admin to false.  Add a user to your organization  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [AddUserResponse]
  describe 'api_public_v1_user_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_user_user_delete
  # Remove a user
  # Remove a user from your organization. You can choose a user to act as a replacement or let VictorOps handle finding the replacement. User will be replaced in their on-call rotations, escalation policies and scheduled overrides.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param user The VictorOps user to be deleted
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_public_v1_user_user_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_user_user_get
  # Retrieve information for a user
  # Get the information for the specified user  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param user The VictorOps user to fetch
  # @param [Hash] opts the optional parameters
  # @return [AddUserResponse]
  describe 'api_public_v1_user_user_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_user_user_put
  # Update a user
  # Update the designated user  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param user The VictorOps user to be updated
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [AddUserResponse]
  describe 'api_public_v1_user_user_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v1_user_user_teams_get
  # Retrieve the user&#39;s team membership
  # This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param user The VictorOps user
  # @param [Hash] opts the optional parameters
  # @return [UserTeamsResponse]
  describe 'api_public_v1_user_user_teams_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_public_v2_user_get
  # List users
  # Get a list of users for your organization. Optionally, search for users by email address.  This API may be called a maximum of 2 times per second. 
  # @param x_vo_api_id Your API ID
  # @param x_vo_api_key Your API Key
  # @param [Hash] opts the optional parameters
  # @option opts [String] :email An email address with which to search for users
  # @return [ListUserResponse]
  describe 'api_public_v2_user_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
